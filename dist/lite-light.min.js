const h = {};
let n = {
  startX: 0,
  startY: 0,
  endX: 0,
  endY: 0,
  initialDistance: 0,
  isZooming: !1,
  lastCenterX: 0,
  lastCenterY: 0
}, e = {
  scale: 1,
  x: 0,
  y: 0,
  initialScale: 1,
  initialX: 0,
  initialY: 0
};
const O = 0.01, p = 1, U = 5;
function m(t) {
  return h[t] || (h[t] = new Image(), h[t].src = t), h[t];
}
function q() {
  const t = window.scrollY;
  document.body.style.position = "fixed", document.body.style.top = `-${t}px`, document.body.style.width = "100%", document.body.style.overflowY = "scroll";
}
function $() {
  const t = document.body.style.top;
  document.body.style.position = "", document.body.style.top = "", document.body.style.width = "", document.body.style.overflowY = "", window.scrollTo(0, parseInt(t || "0") * -1);
}
function L(t) {
  if (t.length < 2) return 0;
  const l = t[0], o = t[1];
  return Math.sqrt(
    Math.pow(o.screenX - l.screenX, 2) + Math.pow(o.screenY - l.screenY, 2)
  );
}
function A(t) {
  if (t.length < 2) return { x: t[0].screenX, y: t[0].screenY };
  const l = t[0], o = t[1];
  return {
    x: (l.screenX + o.screenX) / 2,
    y: (l.screenY + o.screenY) / 2
  };
}
function v(t) {
  t.style.transform = `scale(${e.scale}) translate(${e.x}px, ${e.y}px)`, t.style.transformOrigin = "center center";
}
function w(t) {
  e.scale = 1, e.x = 0, e.y = 0, v(t);
}
function C(t) {
  return Math.abs(t - 1) < O;
}
function B(t = {}) {
  const l = {
    imageSelector: t.imageSelector || "img[data-lightbox]",
    imageUrlAttribute: t.imageUrlAttribute || "data-lightbox",
    lightboxClass: t.lightboxClass || "lite-light",
    swipeThreshold: t.swipeThreshold || 50,
    fadeAnimationDuration: t.fadeAnimationDuration || 150,
    ...t
  };
  document.querySelector(`.${l.lightboxClass}`) || N(l.lightboxClass);
  const o = document.querySelector(`.${l.lightboxClass}`), c = o.querySelector("img"), M = o.querySelector(".lite-light-prev"), S = o.querySelector(".lite-light-next"), E = o.querySelector(".lite-light-close");
  document.addEventListener("click", (f) => {
    if (f.target.tagName !== "IMG" || !f.target.hasAttribute(l.imageUrlAttribute)) return;
    const r = Array.from(document.querySelectorAll(l.imageSelector));
    let d = r.findIndex((i) => i === f.target);
    function x(i) {
      const a = (i - 1 + r.length) % r.length, s = (i + 1) % r.length;
      m(r[a].getAttribute(l.imageUrlAttribute)), m(r[s].getAttribute(l.imageUrlAttribute));
    }
    function g(i) {
      d = (i + r.length) % r.length;
      const a = r[d].getAttribute(l.imageUrlAttribute);
      m(a), c.classList.add("lite-light-fade-out"), c.addEventListener("animationend", function s() {
        c.src = a, w(c), c.classList.remove("lite-light-fade-out"), c.classList.add("lite-light-fade-in"), x(d), c.addEventListener("animationend", function() {
          c.classList.remove("lite-light-fade-in");
        }, { once: !0 }), c.removeEventListener("animationend", s);
      }, { once: !0 });
    }
    function T(i) {
      const a = i.touches;
      if (a.length === 1) {
        const s = a[0];
        n.startX = s.screenX, n.startY = s.screenY, n.lastCenterX = s.screenX, n.lastCenterY = s.screenY, n.isZooming = !1, e.initialScale = e.scale, e.initialX = e.x, e.initialY = e.y;
      } else if (a.length === 2) {
        n.initialDistance = L(a);
        const s = A(a);
        n.lastCenterX = s.x, n.lastCenterY = s.y, e.initialScale = e.scale, e.initialX = e.x, e.initialY = e.y, n.isZooming = !0;
      }
    }
    function D(i) {
      const a = i.touches;
      if (a.length === 2) {
        const s = L(a), u = A(a);
        if (n.initialDistance > 0) {
          const b = s / n.initialDistance;
          if (e.scale = Math.max(p, Math.min(U, e.initialScale * b)), C(e.scale))
            e.x = 0, e.y = 0;
          else {
            const Z = u.x - n.lastCenterX, k = u.y - n.lastCenterY;
            e.scale > p && (e.x = e.initialX + Z / e.scale, e.y = e.initialY + k / e.scale);
          }
          v(c);
        }
        n.lastCenterX = u.x, n.lastCenterY = u.y, n.isZooming = !0;
      } else if (a.length === 1 && e.scale > p) {
        const s = a[0], u = s.screenX - n.lastCenterX, b = s.screenY - n.lastCenterY;
        e.x += u / e.scale, e.y += b / e.scale, v(c), n.lastCenterX = s.screenX, n.lastCenterY = s.screenY, n.isZooming = !0;
      }
    }
    function I(i) {
      if (i.changedTouches.length === 1 && !n.isZooming && i.touches.length === 0 && C(e.scale)) {
        const a = i.changedTouches[0];
        n.endX = a.screenX, n.endY = a.screenY;
        const s = n.endX - n.startX, u = n.endY - n.startY;
        Math.abs(s) > Math.abs(u) && Math.abs(s) > l.swipeThreshold && (g(s > 0 ? d - 1 : d + 1), i.stopPropagation());
      }
      i.touches.length === 0 && (n.isZooming = !1, n.initialDistance = 0);
    }
    function Y(i) {
      switch (i.key) {
        case "ArrowLeft":
          g(d - 1), i.preventDefault();
          break;
        case "ArrowRight":
          g(d + 1), i.preventDefault();
          break;
        case "Escape":
          y(), i.preventDefault();
          break;
      }
    }
    function y() {
      o.style.display = "none", $(), document.removeEventListener("keydown", Y);
    }
    function X(i) {
      return (a) => {
        a.stopPropagation(), g(d + i);
      };
    }
    o.style.display = "flex", m(r[d].getAttribute(l.imageUrlAttribute)), x(d), c.src = r[d].getAttribute(l.imageUrlAttribute), w(c), c.classList.add("lite-light-fade-in"), q(), c.addEventListener("animationend", () => {
      c.classList.remove("lite-light-fade-in");
    }, { once: !0 }), o.addEventListener("touchstart", T, { passive: !0 }), o.addEventListener("touchmove", D, { passive: !0 }), o.addEventListener("touchend", I, { passive: !0 }), document.addEventListener("keydown", Y), M.addEventListener("click", X(-1)), S.addEventListener("click", X(1)), E.addEventListener("click", (i) => {
      i.stopImmediatePropagation(), y();
    }), o.addEventListener("click", (i) => {
      i.stopImmediatePropagation(), y();
    });
  });
}
function N(t) {
  const l = `
    <div class="${t}">
      <div class="lite-light-prev lite-light-button">
        <span class="lite-light-arrow lite-light-left"></span>
      </div>
      <img style="max-width: 90%; max-height: 90%;" />
      <div class="lite-light-next lite-light-button">
        <span class="lite-light-arrow lite-light-right"></span>
      </div>
      <div class="lite-light-close lite-light-button">
        <span class="lite-light-bar"></span>
        <span class="lite-light-bar"></span>
      </div>
    </div>
  `;
  document.body.insertAdjacentHTML("beforeend", l);
}
function H(t) {
  B(t);
}
export {
  H as init,
  B as initLiteLight
};
