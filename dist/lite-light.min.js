const h = {};
let n = {
  startX: 0,
  startY: 0,
  endX: 0,
  endY: 0,
  initialDistance: 0,
  isZooming: !1,
  lastCenterX: 0,
  lastCenterY: 0
}, t = {
  scale: 1,
  x: 0,
  y: 0,
  initialScale: 1,
  initialX: 0,
  initialY: 0
};
const U = 0.01, p = 1, q = 5;
function m(e) {
  return h[e] || (h[e] = new Image(), h[e].src = e), h[e];
}
let v = 0;
function $() {
  v = window.scrollY, document.body.style.position = "fixed", document.body.style.top = `-${v}px`, document.body.style.width = "100%", document.body.style.overflowY = "scroll";
}
function B() {
  document.body.style.position = "", document.body.style.top = "", document.body.style.width = "", document.body.style.overflowY = "", window.scrollTo({
    top: v,
    left: 0,
    behavior: "instant"
  });
}
function A(e) {
  if (e.length < 2) return 0;
  const l = e[0], o = e[1];
  return Math.sqrt(
    Math.pow(o.screenX - l.screenX, 2) + Math.pow(o.screenY - l.screenY, 2)
  );
}
function w(e) {
  if (e.length < 2) return { x: e[0].screenX, y: e[0].screenY };
  const l = e[0], o = e[1];
  return {
    x: (l.screenX + o.screenX) / 2,
    y: (l.screenY + o.screenY) / 2
  };
}
function x(e) {
  e.style.transform = `scale(${t.scale}) translate(${t.x}px, ${t.y}px)`, e.style.transformOrigin = "center center";
}
function C(e) {
  t.scale = 1, t.x = 0, t.y = 0, x(e);
}
function S(e) {
  return Math.abs(e - 1) < U;
}
function N(e = {}) {
  const l = {
    imageSelector: e.imageSelector || "img[data-lightbox]",
    imageUrlAttribute: e.imageUrlAttribute || "data-lightbox",
    lightboxClass: e.lightboxClass || "lite-light",
    swipeThreshold: e.swipeThreshold || 50,
    fadeAnimationDuration: e.fadeAnimationDuration || 150,
    ...e
  };
  document.querySelector(`.${l.lightboxClass}`) || P(l.lightboxClass);
  const o = document.querySelector(`.${l.lightboxClass}`), c = o.querySelector("img"), M = o.querySelector(".lite-light-prev"), E = o.querySelector(".lite-light-next"), T = o.querySelector(".lite-light-close");
  document.addEventListener("click", (f) => {
    if (f.target.tagName !== "IMG" || !f.target.hasAttribute(l.imageUrlAttribute)) return;
    const r = Array.from(document.querySelectorAll(l.imageSelector));
    let d = r.findIndex((i) => i === f.target);
    function Y(i) {
      const s = (i - 1 + r.length) % r.length, a = (i + 1) % r.length;
      m(r[s].getAttribute(l.imageUrlAttribute)), m(r[a].getAttribute(l.imageUrlAttribute));
    }
    function u(i) {
      d = (i + r.length) % r.length;
      const s = r[d].getAttribute(l.imageUrlAttribute);
      m(s), c.classList.add("lite-light-fade-out"), c.addEventListener("animationend", function a() {
        c.src = s, C(c), c.classList.remove("lite-light-fade-out"), c.classList.add("lite-light-fade-in"), Y(d), c.addEventListener("animationend", function() {
          c.classList.remove("lite-light-fade-in");
        }, { once: !0 }), c.removeEventListener("animationend", a);
      }, { once: !0 });
    }
    function D(i) {
      const s = i.touches;
      if (s.length === 1) {
        const a = s[0];
        n.startX = a.screenX, n.startY = a.screenY, n.lastCenterX = a.screenX, n.lastCenterY = a.screenY, n.isZooming = !1, t.initialScale = t.scale, t.initialX = t.x, t.initialY = t.y;
      } else if (s.length === 2) {
        n.initialDistance = A(s);
        const a = w(s);
        n.lastCenterX = a.x, n.lastCenterY = a.y, t.initialScale = t.scale, t.initialX = t.x, t.initialY = t.y, n.isZooming = !0;
      }
    }
    function I(i) {
      const s = i.touches;
      if (s.length === 2) {
        const a = A(s), g = w(s);
        if (n.initialDistance > 0) {
          const b = a / n.initialDistance;
          if (t.scale = Math.max(p, Math.min(q, t.initialScale * b)), S(t.scale))
            t.x = 0, t.y = 0;
          else {
            const k = g.x - n.lastCenterX, O = g.y - n.lastCenterY;
            t.scale > p && (t.x = t.initialX + k / t.scale, t.y = t.initialY + O / t.scale);
          }
          x(c);
        }
        n.lastCenterX = g.x, n.lastCenterY = g.y, n.isZooming = !0;
      } else if (s.length === 1 && t.scale > p) {
        const a = s[0], g = a.screenX - n.lastCenterX, b = a.screenY - n.lastCenterY;
        t.x += g / t.scale, t.y += b / t.scale, x(c), n.lastCenterX = a.screenX, n.lastCenterY = a.screenY, n.isZooming = !0;
      }
    }
    function Z(i) {
      if (i.changedTouches.length === 1 && !n.isZooming && i.touches.length === 0 && S(t.scale)) {
        const s = i.changedTouches[0];
        n.endX = s.screenX, n.endY = s.screenY;
        const a = n.endX - n.startX, g = n.endY - n.startY;
        Math.abs(a) > Math.abs(g) && Math.abs(a) > l.swipeThreshold && (u(a > 0 ? d - 1 : d + 1), i.stopPropagation());
      }
      i.touches.length === 0 && (n.isZooming = !1, n.initialDistance = 0);
    }
    function X(i) {
      switch (i.key) {
        case "ArrowLeft":
          u(d - 1), i.preventDefault();
          break;
        case "ArrowRight":
          u(d + 1), i.preventDefault();
          break;
        case "Escape":
          y(), i.preventDefault();
          break;
      }
    }
    function y() {
      o.style.display = "none", B(), document.removeEventListener("keydown", X);
    }
    function L(i) {
      return (s) => {
        s.stopPropagation(), u(d + i);
      };
    }
    o.style.display = "flex", m(r[d].getAttribute(l.imageUrlAttribute)), Y(d), c.src = r[d].getAttribute(l.imageUrlAttribute), C(c), c.classList.add("lite-light-fade-in"), $(), c.addEventListener("animationend", () => {
      c.classList.remove("lite-light-fade-in");
    }, { once: !0 }), o.addEventListener("touchstart", D, { passive: !0 }), o.addEventListener("touchmove", I, { passive: !0 }), o.addEventListener("touchend", Z, { passive: !0 }), document.addEventListener("keydown", X), M.addEventListener("click", L(-1)), E.addEventListener("click", L(1)), T.addEventListener("click", (i) => {
      i.stopImmediatePropagation(), y();
    }), o.addEventListener("click", (i) => {
      i.stopImmediatePropagation(), y();
    });
  });
}
function P(e) {
  const l = `
    <div class="${e}">
      <div class="lite-light-prev lite-light-button">
        <span class="lite-light-arrow lite-light-left"></span>
      </div>
      <img style="max-width: 90%; max-height: 90%;" />
      <div class="lite-light-next lite-light-button">
        <span class="lite-light-arrow lite-light-right"></span>
      </div>
      <div class="lite-light-close lite-light-button">
        <span class="lite-light-bar"></span>
        <span class="lite-light-bar"></span>
      </div>
    </div>
  `;
  document.body.insertAdjacentHTML("beforeend", l);
}
function H(e) {
  N(e);
}
export {
  H as init,
  N as initLiteLight
};
